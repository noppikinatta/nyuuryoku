// CODE GENERATED BY genapis.go. DO NOT EDIT.

package nyuuryoku

import (
	"github.com/hajimehoshi/ebiten/v2"
	"github.com/hajimehoshi/ebiten/v2/inpututil"
)

type Mouse struct {
	cursorPositionFn            func() (int, int)
	isMouseButtonPressedFn      func(mouseButton ebiten.MouseButton) bool
	isMouseButtonJustPressedFn  func(button ebiten.MouseButton) bool
	isMouseButtonJustReleasedFn func(button ebiten.MouseButton) bool
	mouseButtonPressDurationFn  func(button ebiten.MouseButton) int
	wheelFn                     func() (float64, float64)
}

func NewMouse() *Mouse {
	m := &Mouse{}
	s := NewMouseSetter(m)
	s.SetDefault()

	return m
}

func (m *Mouse) CursorPosition() (int, int) {
	return m.cursorPositionFn()
}
func (m *Mouse) IsPressed(mouseButton ebiten.MouseButton) bool {
	return m.isMouseButtonPressedFn(mouseButton)
}
func (m *Mouse) IsJustPressed(button ebiten.MouseButton) bool {
	return m.isMouseButtonJustPressedFn(button)
}
func (m *Mouse) IsJustReleased(button ebiten.MouseButton) bool {
	return m.isMouseButtonJustReleasedFn(button)
}
func (m *Mouse) PressDuration(button ebiten.MouseButton) int {
	return m.mouseButtonPressDurationFn(button)
}
func (m *Mouse) Wheel() (float64, float64) {
	return m.wheelFn()
}

type MouseSetter struct {
	mouse *Mouse
}

func NewMouseSetter(m *Mouse) *MouseSetter {
	return &MouseSetter{m}
}

func (s *MouseSetter) SetDefault() {
	s.SetCursorPositionFunc(ebiten.CursorPosition)
	s.SetIsPressedFunc(ebiten.IsMouseButtonPressed)
	s.SetIsJustPressedFunc(inpututil.IsMouseButtonJustPressed)
	s.SetIsJustReleasedFunc(inpututil.IsMouseButtonJustReleased)
	s.SetPressDurationFunc(inpututil.MouseButtonPressDuration)
	s.SetWheelFunc(ebiten.Wheel)

}

func (s *MouseSetter) SetCursorPositionFunc(fn func() (int, int)) {
	s.mouse.cursorPositionFn = fn
}
func (s *MouseSetter) SetIsPressedFunc(fn func(mouseButton ebiten.MouseButton) bool) {
	s.mouse.isMouseButtonPressedFn = fn
}
func (s *MouseSetter) SetIsJustPressedFunc(fn func(button ebiten.MouseButton) bool) {
	s.mouse.isMouseButtonJustPressedFn = fn
}
func (s *MouseSetter) SetIsJustReleasedFunc(fn func(button ebiten.MouseButton) bool) {
	s.mouse.isMouseButtonJustReleasedFn = fn
}
func (s *MouseSetter) SetPressDurationFunc(fn func(button ebiten.MouseButton) int) {
	s.mouse.mouseButtonPressDurationFn = fn
}
func (s *MouseSetter) SetWheelFunc(fn func() (float64, float64)) {
	s.mouse.wheelFn = fn
}
